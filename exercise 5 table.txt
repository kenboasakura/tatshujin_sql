・演習5-1

/*縦列の疑似配列テーブルの削除*/
DROP TABLE IF EXISTS
	array_tables
;

/*縦列の疑似配列テーブルの作成*/
CREATE TABLE
	array_tables
	(
		key_number CHAR(1) NOT NULL,
		index_number INTEGER NOT NULL,
		value INTEGER,
		PRIMARY KEY (key_number,index_number)
	)
;

/*縦列の疑似配列テーブルに値を挿入*/
INSERT IGNORE INTO
	array_tables
VALUES
		('A', 1, NULL),
		('A', 2, NULL),
		('A', 3, NULL),
		('A', 4, NULL),
		('A', 5, NULL),
		('A', 6, NULL),
		('A', 7, NULL),
		('A', 8, NULL),
		('A', 9, NULL),
		('B', 1, 3),
		('B', 2, NULL),
		('B', 3, NULL),
		('B', 4, NULL),
		('B', 5, NULL),
		('B', 6, NULL),
		('B', 7, NULL),
		('B', 8, NULL),
		('B', 9, NULL),
		('B',10, NULL),
		('C', 1, 1),
		('C', 2, 1),
		('C', 3, 1),
		('C', 4, 1),
		('C', 5, 1),
		('C', 6, 1),
		('C', 7, 1),
		('C', 8, 1),
		('C', 9, 1),
		('C',10, 1)

;


・演習5-2
/*プロジェクトの行程番号を管理するテーブルの削除*/
DROP TABLE IF EXISTS
	projects
;

/*プロジェクトの行程番号を管理するテーブルの作成*/
CREATE TABLE
	projects
	(
		project_code VARCHAR(32),
		step_number INTEGER ,
		status VARCHAR(32),
		PRIMARY KEY(project_code, step_number)
	)
;

/*プロジェクトの行程番号を管理するテーブルに値を挿入*/
INSERT IGNORE INTO
	projects
VALUES
	/*行程番号*/
	('AA100', 0, '完了'),
	/*行程番号*/
	('AA100', 1, '待機'),
	/*行程番号*/
	('AA100', 2, '待機'),
	/*行程番号*/
	('B200',  0, '待機'),
	/*行程番号*/
	('B200',  1, '待機'),
	/*行程番号*/
	('CS300', 0, '完了'),
	/*行程番号*/
	('CS300', 1, '完了'),
	/*行程番号*/
	('CS300', 2, '待機'),
	/*行程番号*/
	('CS300', 3, '待機'),
	/*行程番号*/
	('DY400', 0, '完了'),
	/*行程番号*/
	('DY400', 1, '完了'),
	/*行程番号*/
	('DY400', 2, '完了')
;

・演習5-3
/*0から9までの連番テーブルの削除*/
DROP TABLE IF EXISTS
	digits
;

/*0から999までの連番ビューの削除*/
DROP VIEW IF EXISTS
	numbers
;

/*0から9までの連番テーブルの作成*/
CREATE TABLE
	digits
	(
		digit INTEGER PRIMARY KEY
	)
; 

/*0から9までの連番テーブルに値を挿入*/
INSERT IGNORE INTO
	digits 
VALUES
	/*連番の番号0*/
	(0),
	/*連番の番号1*/
	(1),
	/*連番の番号2*/
	(2),
	/*連番の番号3*/
	(3),
	/*連番の番号4*/
	(4),
	/*連番の番号5*/
	(5),
	/*連番の番号6*/
	(6),
	/*連番の番号7*/
	(7),
	/*連番の番号8*/
	(8),
	/*連番の番号9*/
	(9)
;

/*0から999までの連番ビューの作成*/
CREATE VIEW
	numbers (number) AS
SELECT
	/*連番を999まで作るためにかけられる整数*/
	first_digits.digit  + (second_digits.digit * 10) + (third_digits.digit * 100)
FROM
	digits AS first_digits
CROSS JOIN
	digits AS second_digits
CROSS JOIN
	digits AS third_digits
;